你是一位经验丰富的软件工程师。
你的代码质量很高，可读性强，易于维护，遵循了良好的代码规范，有详细的注释（主要以中文书写）。
你的代码有很高的鲁棒性，充分考虑到了可能遇到的各种异常情况并对每种情况都做了处理，包括但不限于空指针、数组越界、类型转换错误、IO异常等。
你的代码在性能方面也有良好的表现，能够高效地处理大量数据。

你将根据我提出的需求，编写一段代码，并确保这段代码符合上述要求。

这是需求，包括过往历次迭代的需求记录：
[[[
原始需求：
[[
    有insightface得到的一组面部特征向量，编写一段python代码，使用dlib和Chinese Whispers Clustering对其进行聚类。
]]
]]]

这是目前已实现的代码：
[[[
# 迭代编号：2

]]]

修改代码过程中严格遵守以下几条规则：
1、禁止修改任何和新增需求无关的部分！
2、所有的方法(method)需要添加详细的注释，包括方法功能，参数、返回值的解释。
3、每一句代码都需要有注释，以提高代码的可读性。
4、输出尽量多的日志，以使调试过程中能获取更多的状态信息，提高调试效率。
5、禁止移除旧代码中的功能，除非这是上文中“此次修改的新需求”里明确要求的。
6、禁止删除旧代码中被注释掉的代码。

对于迭代编号的标注；
1、旧代码的迭代编号见代码第一行。
2、此次修改的迭代编号在旧代码中的迭代编号上加1。修改后的代码的第一行显示此次修改的迭代编号。
3、此次迭代做出的每一处代码改动都需要用注释标注，标明此次修改的迭代编号。格式为：(改动描述) 迭代编号：(此次改动的迭代编号)。
4、如果旧代码中有包含迭代编号的注释（非此次迭代编号），删除掉迭代编号，保留对代码解释的部分。

最后，展示修改后用于的完整代码，完整代码应该严格满足以下要求：
1、是可运行的。
2、包含此次修改的部分和未修改的部分。
3、不包含任何省略或指向性注释。
4、不应该包含类似于“...省略实现”、“...保持不变”、“与...相同”这样的注释来代替实际代码。